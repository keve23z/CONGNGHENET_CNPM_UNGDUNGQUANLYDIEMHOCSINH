#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UNGDUNGQUANLYDIEMHOCSINH.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHocSinhTieuHoc")]
	public partial class QL_DiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDanhGiaHanhKiem(DanhGiaHanhKiem instance);
    partial void UpdateDanhGiaHanhKiem(DanhGiaHanhKiem instance);
    partial void DeleteDanhGiaHanhKiem(DanhGiaHanhKiem instance);
    partial void InsertPhuHuynh(PhuHuynh instance);
    partial void UpdatePhuHuynh(PhuHuynh instance);
    partial void DeletePhuHuynh(PhuHuynh instance);
    partial void InsertDanhGiaHocLuc(DanhGiaHocLuc instance);
    partial void UpdateDanhGiaHocLuc(DanhGiaHocLuc instance);
    partial void DeleteDanhGiaHocLuc(DanhGiaHocLuc instance);
    partial void InsertDiem(Diem instance);
    partial void UpdateDiem(Diem instance);
    partial void DeleteDiem(Diem instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHanhKiem(HanhKiem instance);
    partial void UpdateHanhKiem(HanhKiem instance);
    partial void DeleteHanhKiem(HanhKiem instance);
    partial void InsertHocLuc(HocLuc instance);
    partial void UpdateHocLuc(HocLuc instance);
    partial void DeleteHocLuc(HocLuc instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKhoi(Khoi instance);
    partial void UpdateKhoi(Khoi instance);
    partial void DeleteKhoi(Khoi instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNienKhoa(NienKhoa instance);
    partial void UpdateNienKhoa(NienKhoa instance);
    partial void DeleteNienKhoa(NienKhoa instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    #endregion
		
		public QL_DiemDataContext() : 
				base(global::UNGDUNGQUANLYDIEMHOCSINH.Properties.Settings.Default.QLHocSinhTieuHocConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QL_DiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_DiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_DiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_DiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DanhGiaHanhKiem> DanhGiaHanhKiems
		{
			get
			{
				return this.GetTable<DanhGiaHanhKiem>();
			}
		}
		
		public System.Data.Linq.Table<PhuHuynh> PhuHuynhs
		{
			get
			{
				return this.GetTable<PhuHuynh>();
			}
		}
		
		public System.Data.Linq.Table<DanhGiaHocLuc> DanhGiaHocLucs
		{
			get
			{
				return this.GetTable<DanhGiaHocLuc>();
			}
		}
		
		public System.Data.Linq.Table<Diem> Diems
		{
			get
			{
				return this.GetTable<Diem>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HanhKiem> HanhKiems
		{
			get
			{
				return this.GetTable<HanhKiem>();
			}
		}
		
		public System.Data.Linq.Table<HocLuc> HocLucs
		{
			get
			{
				return this.GetTable<HocLuc>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<Khoi> Khois
		{
			get
			{
				return this.GetTable<Khoi>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NienKhoa> NienKhoas
		{
			get
			{
				return this.GetTable<NienKhoa>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGiaHanhKiem")]
	public partial class DanhGiaHanhKiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaHanhKiem;
		
		private byte _HocKy;
		
		private string _MaNienKhoa;
		
		private EntityRef<HanhKiem> _HanhKiem;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<NienKhoa> _NienKhoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnHocKyChanging(byte value);
    partial void OnHocKyChanged();
    partial void OnMaNienKhoaChanging(string value);
    partial void OnMaNienKhoaChanged();
    #endregion
		
		public DanhGiaHanhKiem()
		{
			this._HanhKiem = default(EntityRef<HanhKiem>);
			this._HocSinh = default(EntityRef<HocSinh>);
			this._NienKhoa = default(EntityRef<NienKhoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="Char(5)")]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					if (this._HanhKiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNienKhoa", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNienKhoa
		{
			get
			{
				return this._MaNienKhoa;
			}
			set
			{
				if ((this._MaNienKhoa != value))
				{
					if (this._NienKhoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaNienKhoa = value;
					this.SendPropertyChanged("MaNienKhoa");
					this.OnMaNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HanhKiem_DanhGiaHanhKiem", Storage="_HanhKiem", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem", IsForeignKey=true)]
		public HanhKiem HanhKiem
		{
			get
			{
				return this._HanhKiem.Entity;
			}
			set
			{
				HanhKiem previousValue = this._HanhKiem.Entity;
				if (((previousValue != value) 
							|| (this._HanhKiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HanhKiem.Entity = null;
						previousValue.DanhGiaHanhKiems.Remove(this);
					}
					this._HanhKiem.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHanhKiems.Add(this);
						this._MaHanhKiem = value.MaHanhKiem;
					}
					else
					{
						this._MaHanhKiem = default(string);
					}
					this.SendPropertyChanged("HanhKiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhGiaHanhKiem", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DanhGiaHanhKiems.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHanhKiems.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_DanhGiaHanhKiem", Storage="_NienKhoa", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa", IsForeignKey=true)]
		public NienKhoa NienKhoa
		{
			get
			{
				return this._NienKhoa.Entity;
			}
			set
			{
				NienKhoa previousValue = this._NienKhoa.Entity;
				if (((previousValue != value) 
							|| (this._NienKhoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NienKhoa.Entity = null;
						previousValue.DanhGiaHanhKiems.Remove(this);
					}
					this._NienKhoa.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHanhKiems.Add(this);
						this._MaNienKhoa = value.MaNienKhoa;
					}
					else
					{
						this._MaNienKhoa = default(string);
					}
					this.SendPropertyChanged("NienKhoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuHuynh")]
	public partial class PhuHuynh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPH;
		
		private string _HoTenPH;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _MoiQuanHe;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(string value);
    partial void OnMaPHChanged();
    partial void OnHoTenPHChanging(string value);
    partial void OnHoTenPHChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMoiQuanHeChanging(string value);
    partial void OnMoiQuanHeChanged();
    #endregion
		
		public PhuHuynh()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenPH", DbType="NVarChar(30)")]
		public string HoTenPH
		{
			get
			{
				return this._HoTenPH;
			}
			set
			{
				if ((this._HoTenPH != value))
				{
					this.OnHoTenPHChanging(value);
					this.SendPropertyChanging();
					this._HoTenPH = value;
					this.SendPropertyChanged("HoTenPH");
					this.OnHoTenPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(12)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoiQuanHe", DbType="NVarChar(20)")]
		public string MoiQuanHe
		{
			get
			{
				return this._MoiQuanHe;
			}
			set
			{
				if ((this._MoiQuanHe != value))
				{
					this.OnMoiQuanHeChanging(value);
					this.SendPropertyChanging();
					this._MoiQuanHe = value;
					this.SendPropertyChanged("MoiQuanHe");
					this.OnMoiQuanHeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuHuynh_HocSinh", Storage="_HocSinhs", ThisKey="MaPH", OtherKey="MaPH")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.PhuHuynh = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.PhuHuynh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGiaHocLuc")]
	public partial class DanhGiaHocLuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaHocLuc;
		
		private byte _HocKy;
		
		private string _MaNienKhoa;
		
		private EntityRef<HocLuc> _HocLuc;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<NienKhoa> _NienKhoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaHocLucChanging(string value);
    partial void OnMaHocLucChanged();
    partial void OnHocKyChanging(byte value);
    partial void OnHocKyChanged();
    partial void OnMaNienKhoaChanging(string value);
    partial void OnMaNienKhoaChanged();
    #endregion
		
		public DanhGiaHocLuc()
		{
			this._HocLuc = default(EntityRef<HocLuc>);
			this._HocSinh = default(EntityRef<HocSinh>);
			this._NienKhoa = default(EntityRef<NienKhoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="Char(5)")]
		public string MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					if (this._HocLuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNienKhoa", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNienKhoa
		{
			get
			{
				return this._MaNienKhoa;
			}
			set
			{
				if ((this._MaNienKhoa != value))
				{
					if (this._NienKhoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaNienKhoa = value;
					this.SendPropertyChanged("MaNienKhoa");
					this.OnMaNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocLuc_DanhGiaHocLuc", Storage="_HocLuc", ThisKey="MaHocLuc", OtherKey="MaHocLuc", IsForeignKey=true)]
		public HocLuc HocLuc
		{
			get
			{
				return this._HocLuc.Entity;
			}
			set
			{
				HocLuc previousValue = this._HocLuc.Entity;
				if (((previousValue != value) 
							|| (this._HocLuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocLuc.Entity = null;
						previousValue.DanhGiaHocLucs.Remove(this);
					}
					this._HocLuc.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHocLucs.Add(this);
						this._MaHocLuc = value.MaHocLuc;
					}
					else
					{
						this._MaHocLuc = default(string);
					}
					this.SendPropertyChanged("HocLuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhGiaHocLuc", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DanhGiaHocLucs.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHocLucs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_DanhGiaHocLuc", Storage="_NienKhoa", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa", IsForeignKey=true)]
		public NienKhoa NienKhoa
		{
			get
			{
				return this._NienKhoa.Entity;
			}
			set
			{
				NienKhoa previousValue = this._NienKhoa.Entity;
				if (((previousValue != value) 
							|| (this._NienKhoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NienKhoa.Entity = null;
						previousValue.DanhGiaHocLucs.Remove(this);
					}
					this._NienKhoa.Entity = value;
					if ((value != null))
					{
						value.DanhGiaHocLucs.Add(this);
						this._MaNienKhoa = value.MaNienKhoa;
					}
					else
					{
						this._MaNienKhoa = default(string);
					}
					this.SendPropertyChanged("NienKhoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diem")]
	public partial class Diem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaMonHoc;
		
		private System.Nullable<double> _DiemGiuaKy;
		
		private System.Nullable<double> _DiemCuoiKy;
		
		private System.Nullable<double> _DiemTB;
		
		private byte _HocKy;
		
		private string _MaNienKhoa;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<NienKhoa> _NienKhoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnDiemGiuaKyChanging(System.Nullable<double> value);
    partial void OnDiemGiuaKyChanged();
    partial void OnDiemCuoiKyChanging(System.Nullable<double> value);
    partial void OnDiemCuoiKyChanged();
    partial void OnDiemTBChanging(System.Nullable<double> value);
    partial void OnDiemTBChanged();
    partial void OnHocKyChanging(byte value);
    partial void OnHocKyChanged();
    partial void OnMaNienKhoaChanging(string value);
    partial void OnMaNienKhoaChanged();
    #endregion
		
		public Diem()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._NienKhoa = default(EntityRef<NienKhoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemGiuaKy", DbType="Float")]
		public System.Nullable<double> DiemGiuaKy
		{
			get
			{
				return this._DiemGiuaKy;
			}
			set
			{
				if ((this._DiemGiuaKy != value))
				{
					this.OnDiemGiuaKyChanging(value);
					this.SendPropertyChanging();
					this._DiemGiuaKy = value;
					this.SendPropertyChanged("DiemGiuaKy");
					this.OnDiemGiuaKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCuoiKy", DbType="Float")]
		public System.Nullable<double> DiemCuoiKy
		{
			get
			{
				return this._DiemCuoiKy;
			}
			set
			{
				if ((this._DiemCuoiKy != value))
				{
					this.OnDiemCuoiKyChanging(value);
					this.SendPropertyChanging();
					this._DiemCuoiKy = value;
					this.SendPropertyChanged("DiemCuoiKy");
					this.OnDiemCuoiKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", DbType="Float")]
		public System.Nullable<double> DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNienKhoa", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNienKhoa
		{
			get
			{
				return this._MaNienKhoa;
			}
			set
			{
				if ((this._MaNienKhoa != value))
				{
					if (this._NienKhoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaNienKhoa = value;
					this.SendPropertyChanged("MaNienKhoa");
					this.OnMaNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Diem", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Diem", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_Diem", Storage="_NienKhoa", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa", IsForeignKey=true)]
		public NienKhoa NienKhoa
		{
			get
			{
				return this._NienKhoa.Entity;
			}
			set
			{
				NienKhoa previousValue = this._NienKhoa.Entity;
				if (((previousValue != value) 
							|| (this._NienKhoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NienKhoa.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._NienKhoa.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaNienKhoa = value.MaNienKhoa;
					}
					else
					{
						this._MaNienKhoa = default(string);
					}
					this.SendPropertyChanged("NienKhoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _ChucVu;
		
		private string _MaMonHoc;
		
		private EntitySet<Lop> _Lops;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    #endregion
		
		public GiaoVien()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(7)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(12)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(20)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Char(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_Lop", Storage="_Lops", ThisKey="MaGiaoVien", OtherKey="MaGVCN")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCong", Storage="_PhanCongs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HanhKiem")]
	public partial class HanhKiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHanhKiem;
		
		private string _LoaiHanhKiem;
		
		private EntitySet<DanhGiaHanhKiem> _DanhGiaHanhKiems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnLoaiHanhKiemChanging(string value);
    partial void OnLoaiHanhKiemChanged();
    #endregion
		
		public HanhKiem()
		{
			this._DanhGiaHanhKiems = new EntitySet<DanhGiaHanhKiem>(new Action<DanhGiaHanhKiem>(this.attach_DanhGiaHanhKiems), new Action<DanhGiaHanhKiem>(this.detach_DanhGiaHanhKiems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHanhKiem", DbType="NVarChar(20)")]
		public string LoaiHanhKiem
		{
			get
			{
				return this._LoaiHanhKiem;
			}
			set
			{
				if ((this._LoaiHanhKiem != value))
				{
					this.OnLoaiHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._LoaiHanhKiem = value;
					this.SendPropertyChanged("LoaiHanhKiem");
					this.OnLoaiHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HanhKiem_DanhGiaHanhKiem", Storage="_DanhGiaHanhKiems", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem")]
		public EntitySet<DanhGiaHanhKiem> DanhGiaHanhKiems
		{
			get
			{
				return this._DanhGiaHanhKiems;
			}
			set
			{
				this._DanhGiaHanhKiems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.HanhKiem = this;
		}
		
		private void detach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.HanhKiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocLuc")]
	public partial class HocLuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocLuc;
		
		private string _TenHocLuc;
		
		private EntitySet<DanhGiaHocLuc> _DanhGiaHocLucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocLucChanging(string value);
    partial void OnMaHocLucChanged();
    partial void OnTenHocLucChanging(string value);
    partial void OnTenHocLucChanged();
    #endregion
		
		public HocLuc()
		{
			this._DanhGiaHocLucs = new EntitySet<DanhGiaHocLuc>(new Action<DanhGiaHocLuc>(this.attach_DanhGiaHocLucs), new Action<DanhGiaHocLuc>(this.detach_DanhGiaHocLucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocLuc", DbType="NVarChar(20)")]
		public string TenHocLuc
		{
			get
			{
				return this._TenHocLuc;
			}
			set
			{
				if ((this._TenHocLuc != value))
				{
					this.OnTenHocLucChanging(value);
					this.SendPropertyChanging();
					this._TenHocLuc = value;
					this.SendPropertyChanged("TenHocLuc");
					this.OnTenHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocLuc_DanhGiaHocLuc", Storage="_DanhGiaHocLucs", ThisKey="MaHocLuc", OtherKey="MaHocLuc")]
		public EntitySet<DanhGiaHocLuc> DanhGiaHocLucs
		{
			get
			{
				return this._DanhGiaHocLucs;
			}
			set
			{
				this._DanhGiaHocLucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.HocLuc = this;
		}
		
		private void detach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.HocLuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _MaLop;
		
		private string _MaPH;
		
		private EntitySet<DanhGiaHanhKiem> _DanhGiaHanhKiems;
		
		private EntitySet<DanhGiaHocLuc> _DanhGiaHocLucs;
		
		private EntitySet<Diem> _Diems;
		
		private EntityRef<PhuHuynh> _PhuHuynh;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaPHChanging(string value);
    partial void OnMaPHChanged();
    #endregion
		
		public HocSinh()
		{
			this._DanhGiaHanhKiems = new EntitySet<DanhGiaHanhKiem>(new Action<DanhGiaHanhKiem>(this.attach_DanhGiaHanhKiems), new Action<DanhGiaHanhKiem>(this.detach_DanhGiaHanhKiems));
			this._DanhGiaHocLucs = new EntitySet<DanhGiaHocLuc>(new Action<DanhGiaHocLuc>(this.attach_DanhGiaHocLucs), new Action<DanhGiaHocLuc>(this.detach_DanhGiaHocLucs));
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._PhuHuynh = default(EntityRef<PhuHuynh>);
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(30)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(7)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Char(10)")]
		public string MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					if (this._PhuHuynh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhGiaHanhKiem", Storage="_DanhGiaHanhKiems", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<DanhGiaHanhKiem> DanhGiaHanhKiems
		{
			get
			{
				return this._DanhGiaHanhKiems;
			}
			set
			{
				this._DanhGiaHanhKiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DanhGiaHocLuc", Storage="_DanhGiaHocLucs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<DanhGiaHocLuc> DanhGiaHocLucs
		{
			get
			{
				return this._DanhGiaHocLucs;
			}
			set
			{
				this._DanhGiaHocLucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Diem", Storage="_Diems", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuHuynh_HocSinh", Storage="_PhuHuynh", ThisKey="MaPH", OtherKey="MaPH", IsForeignKey=true)]
		public PhuHuynh PhuHuynh
		{
			get
			{
				return this._PhuHuynh.Entity;
			}
			set
			{
				PhuHuynh previousValue = this._PhuHuynh.Entity;
				if (((previousValue != value) 
							|| (this._PhuHuynh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhuHuynh.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._PhuHuynh.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaPH = value.MaPH;
					}
					else
					{
						this._MaPH = default(string);
					}
					this.SendPropertyChanged("PhuHuynh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoi")]
	public partial class Khoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoi;
		
		private string _TenKhoi;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    #endregion
		
		public Khoi()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(30)")]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_Lop", Storage="_Lops", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _sdt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="NVarChar(10)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoi;
		
		private string _MaGVCN;
		
		private string _MaNienKhoa;
		
		private EntitySet<HocSinh> _HocSinhs;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<Khoi> _Khoi;
		
		private EntityRef<NienKhoa> _NienKhoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoiChanging(string value);
    partial void OnMaKhoiChanged();
    partial void OnMaGVCNChanging(string value);
    partial void OnMaGVCNChanged();
    partial void OnMaNienKhoaChanging(string value);
    partial void OnMaNienKhoaChanged();
    #endregion
		
		public Lop()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._Khoi = default(EntityRef<Khoi>);
			this._NienKhoa = default(EntityRef<NienKhoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Char(3)")]
		public string MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVCN", DbType="Char(10)")]
		public string MaGVCN
		{
			get
			{
				return this._MaGVCN;
			}
			set
			{
				if ((this._MaGVCN != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVCNChanging(value);
					this.SendPropertyChanging();
					this._MaGVCN = value;
					this.SendPropertyChanged("MaGVCN");
					this.OnMaGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNienKhoa", DbType="Char(6)")]
		public string MaNienKhoa
		{
			get
			{
				return this._MaNienKhoa;
			}
			set
			{
				if ((this._MaNienKhoa != value))
				{
					if (this._NienKhoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaNienKhoa = value;
					this.SendPropertyChanged("MaNienKhoa");
					this.OnMaNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_HocSinhs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_PhanCong", Storage="_PhanCongs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_Lop", Storage="_GiaoVien", ThisKey="MaGVCN", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaGVCN = value.MaGiaoVien;
					}
					else
					{
						this._MaGVCN = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_Lop", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(string);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_Lop", Storage="_NienKhoa", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa", IsForeignKey=true)]
		public NienKhoa NienKhoa
		{
			get
			{
				return this._NienKhoa.Entity;
			}
			set
			{
				NienKhoa previousValue = this._NienKhoa.Entity;
				if (((previousValue != value) 
							|| (this._NienKhoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NienKhoa.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._NienKhoa.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaNienKhoa = value.MaNienKhoa;
					}
					else
					{
						this._MaNienKhoa = default(string);
					}
					this.SendPropertyChanged("NienKhoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMonHoc;
		
		private string _TenMonHoc;
		
		private EntitySet<Diem> _Diems;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<PhanCong> _PhanCongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(40)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Diem", Storage="_Diems", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GiaoVien", Storage="_GiaoViens", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCong", Storage="_PhanCongs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NienKhoa")]
	public partial class NienKhoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNienKhoa;
		
		private string _TenNienKhoa;
		
		private EntitySet<DanhGiaHanhKiem> _DanhGiaHanhKiems;
		
		private EntitySet<DanhGiaHocLuc> _DanhGiaHocLucs;
		
		private EntitySet<Diem> _Diems;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNienKhoaChanging(string value);
    partial void OnMaNienKhoaChanged();
    partial void OnTenNienKhoaChanging(string value);
    partial void OnTenNienKhoaChanged();
    #endregion
		
		public NienKhoa()
		{
			this._DanhGiaHanhKiems = new EntitySet<DanhGiaHanhKiem>(new Action<DanhGiaHanhKiem>(this.attach_DanhGiaHanhKiems), new Action<DanhGiaHanhKiem>(this.detach_DanhGiaHanhKiems));
			this._DanhGiaHocLucs = new EntitySet<DanhGiaHocLuc>(new Action<DanhGiaHocLuc>(this.attach_DanhGiaHocLucs), new Action<DanhGiaHocLuc>(this.detach_DanhGiaHocLucs));
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNienKhoa", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNienKhoa
		{
			get
			{
				return this._MaNienKhoa;
			}
			set
			{
				if ((this._MaNienKhoa != value))
				{
					this.OnMaNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaNienKhoa = value;
					this.SendPropertyChanged("MaNienKhoa");
					this.OnMaNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNienKhoa", DbType="NVarChar(30)")]
		public string TenNienKhoa
		{
			get
			{
				return this._TenNienKhoa;
			}
			set
			{
				if ((this._TenNienKhoa != value))
				{
					this.OnTenNienKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenNienKhoa = value;
					this.SendPropertyChanged("TenNienKhoa");
					this.OnTenNienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_DanhGiaHanhKiem", Storage="_DanhGiaHanhKiems", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa")]
		public EntitySet<DanhGiaHanhKiem> DanhGiaHanhKiems
		{
			get
			{
				return this._DanhGiaHanhKiems;
			}
			set
			{
				this._DanhGiaHanhKiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_DanhGiaHocLuc", Storage="_DanhGiaHocLucs", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa")]
		public EntitySet<DanhGiaHocLuc> DanhGiaHocLucs
		{
			get
			{
				return this._DanhGiaHocLucs;
			}
			set
			{
				this._DanhGiaHocLucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_Diem", Storage="_Diems", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NienKhoa_Lop", Storage="_Lops", ThisKey="MaNienKhoa", OtherKey="MaNienKhoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = this;
		}
		
		private void detach_DanhGiaHanhKiems(DanhGiaHanhKiem entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = null;
		}
		
		private void attach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = this;
		}
		
		private void detach_DanhGiaHocLucs(DanhGiaHocLuc entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = null;
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.NienKhoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhanCong;
		
		private string _MaGiaoVien;
		
		private string _MaLop;
		
		private string _MaMonHoc;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<Lop> _Lop;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanCongChanging(string value);
    partial void OnMaPhanCongChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    #endregion
		
		public PhanCong()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._Lop = default(EntityRef<Lop>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhanCong", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhanCong
		{
			get
			{
				return this._MaPhanCong;
			}
			set
			{
				if ((this._MaPhanCong != value))
				{
					this.OnMaPhanCongChanging(value);
					this.SendPropertyChanging();
					this._MaPhanCong = value;
					this.SendPropertyChanged("MaPhanCong");
					this.OnMaPhanCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="Char(10)")]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="Char(10)")]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCong", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_PhanCong", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCong", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
